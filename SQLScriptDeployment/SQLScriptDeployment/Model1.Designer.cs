//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace SQLScriptDeployment
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class dbDeployEntities2 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new dbDeployEntities2 object using the connection string found in the 'dbDeployEntities2' section of the application configuration file.
        /// </summary>
        public dbDeployEntities2() : base("name=dbDeployEntities2", "dbDeployEntities2")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new dbDeployEntities2 object.
        /// </summary>
        public dbDeployEntities2(string connectionString) : base(connectionString, "dbDeployEntities2")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new dbDeployEntities2 object.
        /// </summary>
        public dbDeployEntities2(EntityConnection connection) : base(connection, "dbDeployEntities2")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Server> Server
        {
            get
            {
                if ((_Server == null))
                {
                    _Server = base.CreateObjectSet<Server>("Server");
                }
                return _Server;
            }
        }
        private ObjectSet<Server> _Server;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Server EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServer(Server server)
        {
            base.AddObject("Server", server);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbDeployModel", Name="Server")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Server : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Server object.
        /// </summary>
        /// <param name="serverID">Initial value of the ServerID property.</param>
        public static Server CreateServer(global::System.Int32 serverID)
        {
            Server server = new Server();
            server.ServerID = serverID;
            return server;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ServerID
        {
            get
            {
                return _ServerID;
            }
            set
            {
                if (_ServerID != value)
                {
                    OnServerIDChanging(value);
                    ReportPropertyChanging("ServerID");
                    _ServerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ServerID");
                    OnServerIDChanged();
                }
            }
        }
        private global::System.Int32 _ServerID;
        partial void OnServerIDChanging(global::System.Int32 value);
        partial void OnServerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServerName
        {
            get
            {
                return _ServerName;
            }
            set
            {
                OnServerNameChanging(value);
                ReportPropertyChanging("ServerName");
                _ServerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServerName");
                OnServerNameChanged();
            }
        }
        private global::System.String _ServerName;
        partial void OnServerNameChanging(global::System.String value);
        partial void OnServerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ServerAddress
        {
            get
            {
                return _ServerAddress;
            }
            set
            {
                OnServerAddressChanging(value);
                ReportPropertyChanging("ServerAddress");
                _ServerAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ServerAddress");
                OnServerAddressChanged();
            }
        }
        private global::System.String _ServerAddress;
        partial void OnServerAddressChanging(global::System.String value);
        partial void OnServerAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DatabaseName
        {
            get
            {
                return _DatabaseName;
            }
            set
            {
                OnDatabaseNameChanging(value);
                ReportPropertyChanging("DatabaseName");
                _DatabaseName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DatabaseName");
                OnDatabaseNameChanged();
            }
        }
        private global::System.String _DatabaseName;
        partial void OnDatabaseNameChanging(global::System.String value);
        partial void OnDatabaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

    
    }

    #endregion

    
}
